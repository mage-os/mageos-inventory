<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright 2019 Adobe
 * All Rights Reserved.
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminManageStockInConfigurationTurnedOffForDownloadableProductTest">
        <annotations>
            <stories value="Downloadable Product Custom Stock."/>
            <title value="Manage Stock in Configuration turned off for Downloadable Product."/>
            <description value="Verify, admin should be able to turn off manage stock in configuration for downloadable product on custom stock.."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/457024/scenarios/1547926"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <magentoCLI stepKey="addDownloadableDomain" command="downloadable:domains:add example.com static.magento.com"/>
            <!--Create test data.-->
            <createData entity="FullSource1" stepKey="source"/>
            <createData entity="BasicMsiStock1" stepKey="stock"/>
            <createData entity="SourceStockLinked1" stepKey="stockSourceLink">
                <requiredEntity createDataKey="stock"/>
                <requiredEntity createDataKey="source"/>
            </createData>
            <createData entity="_defaultCategory" stepKey="category"/>
            <createData entity="MsiDownloadableProduct" stepKey="product">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="downloadableLink1" stepKey="downloadableLink">
                <requiredEntity createDataKey="product"/>
            </createData>
            <!--Assign created source to product and set product sock status to out of stock.-->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminArea"/>
            <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openProductEditPageToAssignSource">
                <argument name="productId" value="$$product.id$$"/>
            </actionGroup>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignSourceToProduct">
                <argument name="sourceCode" value="$$source.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminChangeSourceStockStatusActionGroup" stepKey="setProductStatusToOutOfStock">
                <argument name="sourceCode" value="$source.source[source_code]$"/>
                <argument name="sourceStatus" value="{{SourceStatusOutOfStock.value}}"/>
            </actionGroup>
            <actionGroup ref="AdminFormSaveAndCloseActionGroup" stepKey="saveProduct"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="flushCache">
                <argument name="tags" value="full_page"/>
            </actionGroup>
        </before>
        <after>
            <!--Turn on Manage Stock.-->
            <magentoCLI command="config:set {{TurnOnManageStockConfig.path}} {{TurnOnManageStockConfig.value}}" stepKey="enableManageStock"/>
            <comment userInput="BIC workaround" stepKey="reindex"/>
            <comment userInput="BIC workaround" stepKey="flushCache"/>
            <!--Delete test data.-->
            <deleteData createDataKey="product" stepKey="deleteProduct"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <deleteData createDataKey="stock" stepKey="deleteStock"/>
            <!--Disable created source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableSource">
                <argument name="sourceCode" value="$$source.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
            <magentoCLI stepKey="removeDownloadableDomain" command="downloadable:domains:remove static.magento.com example.com"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex2">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache2">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
        </after>

        <!--Verify product is not visible on storefront.-->
        <actionGroup ref="AssertStorefrontProductAbsentOnCategoryPageActionGroup" stepKey="verifyProductNotVisibleOnStorefront">
            <argument name="categoryUrlKey" value="$$category.url_key$$"/>
            <argument name="productName" value="$$product.name$$"/>
        </actionGroup>
        <!-- Turn off Manage Stock-->
        <magentoCLI command="config:set {{TurnOffManageStockConfig.path}} {{TurnOffManageStockConfig.value}}" stepKey="disableManageStock"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="flushCache">
            <argument name="tags" value="config full_page"/>
        </actionGroup>
        <!-- Check product is visible on Storefront-->
        <actionGroup ref="AssertProductInStorefrontCategoryPage" stepKey="verifyProductVisibleOnStorefront">
            <argument name="category" value="$$category$$"/>
            <argument name="product" value="$$product$$"/>
        </actionGroup>
    </test>
</tests>
